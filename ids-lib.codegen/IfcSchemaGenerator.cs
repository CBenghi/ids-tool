using IdsLib.codegen;
using System.Text;
using Xbim.Common.Metadata;

namespace IdsLib.Generator
{
    public class IfcSchemaGenerator
    {
        internal static string Execute()
        {
            var schemas = new[] { "Ifc2x3", "Ifc4", "Ifc4x3" };
            var classNames = new Dictionary<string, List<string>>();
            foreach (var schema in schemas)
            {
                System.Reflection.Module module = SchemaHelper.GetModule(schema);
                var metaD = ExpressMetaData.GetMetadata(module);
                foreach (var daType in metaD.Types())
                {
                    // just class names
                    if (classNames.TryGetValue(daType.Name, out var lst))
                    {
                        lst.Add(schema);
                    }
                    else
                    {
                        classNames.Add(daType.Name, new List<string>() { schema });
                    }

                    //// Enriching schema with attribute names
                    //var thisattnames = daType.Properties.Values.Select(x => x.Name);
                    //foreach (var attributeName in thisattnames)
                    //{
                    //    if (!attNames.Contains(attributeName))
                    //    {
                    //        attNames.Add(attributeName);
                    //    }
                    //}
                }
            }
            var source = stub;
            var sbClasses = new StringBuilder();
            var sbAtts = new StringBuilder();
            int i = 0;
            foreach (var clNm in classNames.Keys.OrderBy(x => x))
            {
                var schemes = classNames[clNm];
                sbClasses.AppendLine($"""               yield return new IfcClassInformation("{clNm}", {CodeHelpers.NewStringArray(schemes)}); // {++i}""");
            }
            source = source.Replace($"<PlaceHolderClasses>\r\n", sbClasses.ToString());
            source = source.Replace($"<PlaceHolderVersion>", VersionHelper.GetFileVersion(typeof(ExpressMetaData)));
            return source;
        }

        private const string stub = @"// <auto-generated/>
// This code was automatically generated with information from Xbim.Essentials <PlaceHolderVersion>.
// Any changes made to this file will be lost.

using System;
using System.Collections.Generic;

namespace IdsLib.IfcSchema
{
    internal partial class SchemaInfo
    {
        /// <summary>
        /// The names of classes across all schemas.
        /// </summary>
        public static IEnumerable<IfcClassInformation> AllClasses
        {
            get
            {
<PlaceHolderClasses>
            }
        }
    }
}

";

    }
}
